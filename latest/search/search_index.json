{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Development helpers for kiara","text":"<p>This package contains documentation as well as set of helper utilities and terminal sub-commands that help develop on kiara itself, as well as kiara plugins in general.</p>"},{"location":"#links","title":"Links","text":"<ul> <li>Documentation: https://DHARPA-Project.github.io/kiara_plugin.develop</li> <li>Code: https://github.com/DHARPA-Project/kiara_plugin.develop</li> </ul>"},{"location":"SUMMARY/","title":"SUMMARY","text":"<ul> <li>Home</li> <li>Development</li> <li>Usage</li> </ul>"},{"location":"packaging/","title":"Kiara plugin packaging","text":"<p>Most of this is automated by the plugin template, there are  few things that need to be done before though.</p> <p>We need 2 secret tokens, for pushing release artifacts to pypi and anaconda.</p>"},{"location":"packaging/#anaconda_push_token","title":"<code>ANACONDA_PUSH_TOKEN</code>","text":"<p>Log into your anaconda.org account, switch to the organization that hosts your package (if applicable), go to \"Settings\". Here, click 'Access' and create a token that has the:</p> <ul> <li>'Allow read access to the API site'</li> <li>'Allow write access to the API site'</li> <li>'Allow all operations on Conda repositories'</li> </ul> <p>items checked.</p> <p>Copy both tokens and store it in your password manager (or enter it directly into a github secret).</p>"},{"location":"packaging/#pypi_api_token","title":"<code>PYPI_API_TOKEN</code>","text":"<p>On the Github account or organization you are using for your plugin, you need to have 2 secrets set:</p> <ul> <li>go to your github account/org \"Settings\" page</li> <li>on the navigation, click on \"Secrets\", then \"Actions\"</li> <li>click 'Create new [organization/account] secret'</li> <li>add the token strings for the environment variable names you created</li> </ul>"},{"location":"development/","title":"kiara development","text":"<p>There are two main areas in kiara where development can occur: when developing a kiara plugin, containing either/or modules, data types, pipelines, etc. And when developing the kiara core codebase, which is less an issue for most users.</p>"},{"location":"development/#plugin-development","title":"Plugin development","text":"<p>If you are interested in developing your own kiara plugin, check out the following resources:</p> <ul> <li>Creating a kiara plugin Python project -- TODO</li> <li>Creating a kiara module</li> <li>Assembling a kiara pipeline</li> </ul>"},{"location":"development/#core-development","title":"Core development","text":"<ul> <li>Development setup</li> </ul>"},{"location":"development/core/","title":"Development setup","text":"<p>This section outlines how to set up a development environment for kiara. For now, it is basically a description of how I setup my own environment, so you might or might not have to adapt some of those steps to your own needs, depending on the tools you use for Python development.</p>"},{"location":"development/core/#code-checkout","title":"Code checkout","text":"<p>The first step is to decide which source code repositories to check out. In most cases, you'll want to check out at least the following repositories:</p> <ul> <li>kiara</li> <li>kiara_plugin.core_types</li> </ul> <p>In addition, it usually also makes sense to check out at least the <code>tabular</code> plugin, and probably the others as well, depending on what exactly you want to achive, and in which areas you want to work in:</p> <ul> <li>kiara_plugin.tabular</li> <li>kiara_plugin.onboarding</li> <li>kiara_plugin.network_analysis</li> <li>kiara_plugin.language_processing</li> </ul> <p>Then there are the more frontend focussed projects:</p> <ul> <li>kiara_plugin.html</li> <li>kiara_plugin.service</li> <li>kiara_plugin.streamlit</li> </ul>"},{"location":"development/core/#script","title":"Script","text":"<p>I've written a script to partly automate the process:</p> <pre><code>#!/usr/bin/env sh\n\nset -e\nset -o pipefail\n\n# set to your github user if you forked the repos\nGITHUB_USER=\"DHARPA-Project\"\n# set to 'false' if you want to use https git urls instead\nUSE_SSH=\"true\"\n# set to 'false' if you don't want to install Python development utilities (black, etc.)\nINSTALL_DEV_UTILS=\"true\"\n\ncheckout_repo() {\nname=${1}\n\nif [[ -d \"${name}\" ]]; then\necho \"Repo '${name}' exists, doing a git pull instead\"\ncd ${name}\ngit pull\n    cd ..\n  else\nif [[ \"${USE_SSH}\" == \"true\" ]]; then\nurl=\"git@github.com:${GITHUB_USER}/${name}.git/\"\nelse\nurl=\"https://github.com/${GITHUB_USER}/${name}.git\"\nfi\n\necho \"-------------------------------------------------------\"\necho \"Checking out: ${url}\"\ngit clone ${url}\npip_install_pkg \"${name}\"\nfi\necho\n}\n\npip_install_pkg() {\n\nname=${1}\necho \"Installing int current virtual-env: ${name}\"\n\nif [[ \"${INSTALL_DEV_UTILS}\" == \"true\" ]]; then\npkg_name=\"${name}[dev_utils]\"\nelse\npkg_name=${name}\nfi\n\npip install -e \"${pkg_name}\"\necho \"Done.\"\n}\n\n# comment out the repositories you don't want to work on\ncheckout_repo \"kiara\"\ncheckout_repo \"kiara_plugin.core_types\"\ncheckout_repo \"kiara_plugin.tabular\"\ncheckout_repo \"kiara_plugin.onboarding\"\n# checkout_repo \"kiara_plugin.network_analysis\"\n# checkout_repo \"kiara_plugin.language_processing\"\n# checkout_repo \"kiara_plugin.streamlit[all_plugins]\"\n# checkout_repo \"kiara_plugin.develop\"\n# checkout_repo \"kiara_plugin.html\"\n# checkout_repo \"kiara_plugin.service\"\n</code></pre> <p>Feel free to adapt it to your needs (for example, fork the repos you are in on Github, and change the <code>GITHUB_USER</code> variable to your own), and run it locally (on Linux or MacOS). You can start of with disabling most project repositories, and uncomment/add them later on, as needed, and re-run.</p> <p>Before you run this script, make sure you have a virtualenv (or conda env) activated, otherwise the packages would be installed into your gloabl Python environment.</p>"},{"location":"development/core/#ide-setup","title":"IDE setup","text":"<p>This depends on your IDE, obviously. I use PyCharm, so what I do usually is:</p> <ul> <li>create a conda environment, activate it</li> <li>create the project base directory, <code>cd</code> into it</li> <li>run the checkout script above</li> <li>open PyCharm, and create a new project:</li> <li>select your newly created base folder as project root directory</li> <li>select my conda/virtualenv as 'existing' Python environment</li> <li>now, go through all sub-projects, individually, and mark the <code>src</code> folder as 'Sources Root' (right-click on the folder, select 'Mark Directory as' -&gt; 'Sources Root'), and <code>tests</code> as 'Tests Sources Root\"</li> </ul> <p>I chose this setup instead of a monorepo because it makes it easier to release plugin packages independently of core kiara, as well as other plugin packages they might depend on. It makes setting up a development environment a bit harder (which is usually a one-time thing), and it requires to do git commits/pushes/pulls independently for each sub-project, but so far the trade-off has been worth it.</p> <p>Personally, I use mu-repo to manage multiple repositories like this, and it helps a bit cutting down in management tasks, I know there are other tools out there like this.</p>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>kiara_plugin<ul> <li>develop<ul> <li>conda<ul> <li>models</li> <li>states</li> </ul> </li> <li>data_types</li> <li>defaults</li> <li>interfaces<ul> <li>cli<ul> <li>conda</li> <li>debug</li> <li>dev</li> </ul> </li> </ul> </li> <li>models</li> <li>modules</li> <li>pipelines</li> <li>utils</li> </ul> </li> </ul> </li> </ul>"},{"location":"reference/kiara_plugin/develop/__init__/","title":"init","text":"<p>::: kiara_plugin.develop</p>"},{"location":"reference/kiara_plugin/develop/data_types/","title":"Data types","text":"<p>::: kiara_plugin.develop.data_types</p>"},{"location":"reference/kiara_plugin/develop/defaults/","title":"Defaults","text":"<p>::: kiara_plugin.develop.defaults</p>"},{"location":"reference/kiara_plugin/develop/models/","title":"Models","text":"<p>::: kiara_plugin.develop.models</p>"},{"location":"reference/kiara_plugin/develop/utils/","title":"Utils","text":"<p>::: kiara_plugin.develop.utils</p>"},{"location":"reference/kiara_plugin/develop/conda/__init__/","title":"init","text":"<p>::: kiara_plugin.develop.conda</p>"},{"location":"reference/kiara_plugin/develop/conda/models/","title":"Models","text":"<p>::: kiara_plugin.develop.conda.models</p>"},{"location":"reference/kiara_plugin/develop/conda/states/","title":"States","text":"<p>::: kiara_plugin.develop.conda.states</p>"},{"location":"reference/kiara_plugin/develop/interfaces/__init__/","title":"init","text":"<p>::: kiara_plugin.develop.interfaces</p>"},{"location":"reference/kiara_plugin/develop/interfaces/cli/__init__/","title":"init","text":"<p>::: kiara_plugin.develop.interfaces.cli</p>"},{"location":"reference/kiara_plugin/develop/interfaces/cli/conda/","title":"Conda","text":"<p>::: kiara_plugin.develop.interfaces.cli.conda</p>"},{"location":"reference/kiara_plugin/develop/interfaces/cli/debug/","title":"Debug","text":"<p>::: kiara_plugin.develop.interfaces.cli.debug</p>"},{"location":"reference/kiara_plugin/develop/interfaces/cli/dev/","title":"Dev","text":"<p>::: kiara_plugin.develop.interfaces.cli.dev</p>"},{"location":"reference/kiara_plugin/develop/modules/__init__/","title":"init","text":"<p>::: kiara_plugin.develop.modules</p>"},{"location":"reference/kiara_plugin/develop/pipelines/__init__/","title":"init","text":"<p>::: kiara_plugin.develop.pipelines</p>"},{"location":"usage/","title":"Usage","text":"<p>This page outlines the utilities included in this package, this is not necessarily required for kiara development.</p>"},{"location":"usage/#installation","title":"Installation","text":"<p>To install this package, run (within an activated virtual environment):</p> <pre><code>```bash\npip install kiara_plugin.develop\n# or, when using conda\nconda install kiara_plugin.develop\n</code></pre> <p>After installation, <code>kiara --help</code> should include the <code>dev</code> subcommand:</p> <pre><code>&gt; kiara --help\n\u001b[1m                                                                                \u001b[0m\n\u001b[1m \u001b[0m\u001b[1;33mUsage: \u001b[0m\u001b[1mkiara [\u001b[0m\u001b[1;36mOPTIONS\u001b[0m\u001b[1m] \u001b[0m\u001b[1;36mCOMMAND\u001b[0m\u001b[1m [\u001b[0m\u001b[1;36mARGS\u001b[0m\u001b[1m]...\u001b[0m\u001b[1m                                      \u001b[0m\u001b[1m \u001b[0m\n\u001b[1m                                                                                \u001b[0m\n \u001b[1;3mkiara\u001b[0m ia a data-orchestration framework; this is the command-line frontend for \n it.                                                                            \n \u001b[2mFor more information, visit the \u001b[0m\u001b[1;2;3mkiara\u001b[0m\u001b[2;3m homepage\u001b[0m\u001b[2m: \u001b[0m                               \n \u001b[2mhttps://dharpa.org/kiara.documentation .\u001b[0m                                       \n\n\u001b[2m\u256d\u2500\u001b[0m\u001b[2m Options \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-config\u001b[0m     \u001b[1;32m-cnf\u001b[0m     \u001b[1;33mTEXT\u001b[0m  \u001b[1;36mA\u001b[0m kiara config file (or folder containing one    \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m                             named 'kiara.config').                           \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-context\u001b[0m    \u001b[1;32m-ctx\u001b[0m,\u001b[1;32m-c\u001b[0m  \u001b[1;33mTEXT\u001b[0m  The name of the kiara context to use (or the     \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m                             path to a context file).                         \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-pipelines\u001b[0m  \u001b[1;32m-p\u001b[0m       \u001b[1;33mTEXT\u001b[0m  File(s) and folder(s) that contain extra         \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m                             pipeline definitions.                            \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36m-\u001b[0m\u001b[1;36m-help\u001b[0m       \u001b[1;32m-h\u001b[0m       \u001b[1;33m    \u001b[0m  Show this message and exit.                      \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m\n\u001b[2m\u256d\u2500\u001b[0m\u001b[2m Commands \u001b[0m\u001b[2m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[0m\u001b[2m\u2500\u256e\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mconda          \u001b[0m\u001b[1;36m \u001b[0m Conda environment related sub-commands.                     \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mconfig         \u001b[0m\u001b[1;36m \u001b[0m Kiara config related sub-commands.                          \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mcontext        \u001b[0m\u001b[1;36m \u001b[0m Kiara context related sub-commands.                         \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mdata           \u001b[0m\u001b[1;36m \u001b[0m Data-related sub-commands.                                  \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mdata-type      \u001b[0m\u001b[1;36m \u001b[0m Information about available data types.                     \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mdebug          \u001b[0m\u001b[1;36m \u001b[0m Kiara context related sub-commands.                         \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mdev            \u001b[0m\u001b[1;36m \u001b[0m Kiara context related sub-commands.                         \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mmodule         \u001b[0m\u001b[1;36m \u001b[0m Module-related sub-commands.                                \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36moperation      \u001b[0m\u001b[1;36m \u001b[0m Metadata-related sub-commands.                              \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mpipeline       \u001b[0m\u001b[1;36m \u001b[0m Pipeline-related sub-commands.                              \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mrender         \u001b[0m\u001b[1;36m \u001b[0m Rendering-related sub-commands.                             \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mrun            \u001b[0m\u001b[1;36m \u001b[0m Run a kiara operation.                                      \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2502\u001b[0m \u001b[1;36mworkflow       \u001b[0m\u001b[1;36m \u001b[0m Workflow-related sub-commands.                              \u001b[2m\u2502\u001b[0m\n\u001b[2m\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u001b[0m\n</code></pre>"},{"location":"usage/#create-new-project","title":"Create new project","text":"<ul> <li>create project in Github</li> <li>git remote add origin git@github.com:/ <li>git push -u origin develop</li>"}]}